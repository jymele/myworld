/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Sun: THREE.Mesh;
  };
  materials: {
    Sun: THREE.MeshStandardMaterial;
  };
};

export function Sun(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/sun.glb") as unknown as GLTFResult;

  materials.Sun.emissive = new THREE.Color(0xffe0a7);
  materials.Sun.emissiveIntensity = 0.5;

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sun.geometry}
        material={materials.Sun}
        position={[0, 7.949, 39]}
      />
    </group>
  );
}

useGLTF.preload("/sun.glb");
